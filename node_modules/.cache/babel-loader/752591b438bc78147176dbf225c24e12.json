{"ast":null,"code":"var _jsxFileName = \"/home/tro/Desktop/facerecognition/facerecognitionbrain/src/App.js\";\nimport React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Navigation from './components/Navigation/Navigation';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport Logo from './components/Logo/Logo';\nimport './App.css';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 30,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n};\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputImage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      console.log(box);\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      console.log(this.state.input);\n      fetch('http://localhost:3000/imageurl', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          input: this.state.input\n        })\n      }).then(response => response.json()).then(response => {\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(data => data.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          }); //.catch(console.log)\n        }\n\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => console.log(err));\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState(initialState);\n      } else if (route === 'home') {\n        this.setState({\n          route: route,\n          isSignedIn: true\n        });\n      } else {\n        this.setState({\n          route: route,\n          isSignedIn: false\n        });\n      }\n    };\n\n    this.state = initialState;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(Particles, {\n      className: \"particles\",\n      params: particlesOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), React.createElement(Navigation, {\n      isSignedIn: this.state.isSignedIn,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), this.state.route === 'home' ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(Logo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), React.createElement(Rank, {\n      name: this.state.user.name,\n      entries: this.state.user.entries,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }), React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onButtonSubmit: this.onButtonSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), React.createElement(FaceRecognition, {\n      box: this.state.box,\n      imageUrl: this.state.imageUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    })) : this.state.route === 'signin' ? React.createElement(Signin, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }) : React.createElement(Register, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/tro/Desktop/facerecognition/facerecognitionbrain/src/App.js"],"names":["React","Component","Particles","FaceRecognition","Navigation","Signin","Register","Logo","ImageLinkForm","Rank","particlesOptions","particles","number","value","density","enable","value_area","initialState","input","imageUrl","box","route","isSignedIn","user","id","name","email","entries","joined","App","constructor","loadUser","data","setState","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","console","log","onButtonSubmit","state","fetch","method","headers","body","JSON","stringify","then","response","json","count","Object","assign","catch","err","onInputChange","event","target","onRouteChange","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Particles from 'react-particles-js';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Navigation from './components/Navigation/Navigation';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport Logo from './components/Logo/Logo';\nimport './App.css';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm'\nimport Rank from './components/Rank/Rank';\n\n\nconst particlesOptions = {\n  particles: {\n    number:{\n      value: 30,\n      density: {\n        enable: true,\n       value_area: 800\n        \n      }\n    }\n  }\n};\n\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined:''\n  }\n}\n\nclass App extends Component {\n constructor() {\n    super();\n    this.state = initialState;\n  }\n  \n\n\n\n  loadUser = (data)=> {\n    this.setState({user: {\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined\n      }\n    })\n\n  }\n\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputImage');\n    const width =  Number(image.width);\n    const height =  Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height),\n    }\n  }\n\n  displayFaceBox = (box) => {\n    console.log(box);\n    this.setState({box: box});\n  }\n\n  onButtonSubmit = ()=> {\n    this.setState({imageUrl: this.state.input});\n    console.log(this.state.input);\n    fetch('http://localhost:3000/imageurl', {\n      method : 'post',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({\n            input:this.state.input\n          })\n    })\n    .then(response => response.json())\n    .then(response => {\n      if (response) {\n        fetch('http://localhost:3000/image', {\n          method: 'put',\n          headers: {'Content-Type': 'application/json'},\n          body: JSON.stringify({\n            id:this.state.user.id\n          })\n        })\n          .then(data=> data.json())\n          .then(count=> {\n            this.setState(Object.assign(this.state.user, {entries: count}))\n          })\n           //.catch(console.log)\n      }\n      this.displayFaceBox(this.calculateFaceLocation(response))\n    })\n    .catch(err=> console.log(err)); \n    \n  }\n  \n  onInputChange = (event) => {\n   this.setState({input: event.target.value})\n  }\n\n  onRouteChange = (route) => {\n    if (route === 'signout'){\n      this.setState(initialState);\n    } else if(route === 'home'){\n      this.setState({route: route, isSignedIn:true });\n    }  else{\n    this.setState({route: route, isSignedIn:false  });\n    }\n  }\n\n\n render() { \n  return (\n    <div className=\"App\">\n         <Particles className='particles'\n                  params={particlesOptions}\n          />\n        <Navigation isSignedIn={this.state.isSignedIn} onRouteChange={this.onRouteChange} />\n       { this.state.route === 'home'\n         ? <div>\n             <Logo />\n             <Rank name= {this.state.user.name} entries= {this.state.user.entries} />\n             <ImageLinkForm \n                onInputChange={this.onInputChange} \n                onButtonSubmit={this.onButtonSubmit} \n             />\n                 <FaceRecognition box= {this.state.box} imageUrl={this.state.imageUrl} />\n            </div>\n         :  (\n              this.state.route === 'signin'\n              ? <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n              : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n            )\n        }    \n    </div>        \n  );\n }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}